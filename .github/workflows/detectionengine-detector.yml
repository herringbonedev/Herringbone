name: (Detector) Build

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'detectionengine/detector/**'
      - '.github/workflows/detectionengine-detector.yml'

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    # Install dependencies
    steps:
    - name: Install yq
      run: |
        sudo wget https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64 -O /usr/bin/yq
        sudo chmod +x /usr/bin/yq

    - name: Install skopeo
      run: |
        sudo apt-get update
        sudo apt-get install -y skopeo

    # Configure runner with code and docker
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build, test, and push the Docker image
    - name: Build Docker image
      run: |
        docker build -t quay.io/herringbone/detectionengine-detector:latest-${GITHUB_SHA::8}-${{ github.run_number }} ./detectionengine/detector

    - name: Run container for smoke test
      run: |
        docker run -d \
        --name test_detectionengine_detector \
        quay.io/herringbone/detectionengine-detector:latest-${GITHUB_SHA::8}-${{ github.run_number }};
        sleep 1
        docker logs test_detectionengine_detector  # Optional: View logs
        docker ps -a               # Show container status
        docker inspect test_detectionengine_detector --format='{{.State.Running}}' | grep true

    - name: Push image to DockerHub (only if tests pass)
      run: |
        docker push quay.io/herringbone/detectionengine-detector:latest-${GITHUB_SHA::8}-${{ github.run_number }}

    - name: Get image digest
      id: digest
      run: |
        DIGEST=$(skopeo inspect docker://quay.io/herringbone/detectionengine-detector:latest-${GITHUB_SHA::8}-${{ github.run_number }} | jq -r '.Digest')
        echo "digest=$DIGEST"
        echo "digest=$DIGEST" >> $GITHUB_OUTPUT

    - name: Update kustomization.yaml with new image digest
      run: |
        TAG="latest-${GITHUB_SHA::8}-${GITHUB_RUN_NUMBER}"
        yq eval -i ".images[0].newTag = \"$TAG\"" kustomize/detectionengine_detector/kustomization.yaml
        yq eval -i ".images[0].digest = \"${{ steps.digest.outputs.digest }}\"" kustomize/detectionengine_detector/kustomization.yaml

    - name: Create/update PR
      if: steps.bump.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}     # cannot bypass protections (good!)
        branch: auto/update/detector-digest    # bot branch
        delete-branch: true
        commit-message: "chore(detector): bump image to ${{ steps.digest.outputs.digest }}"
        title: "chore(detector): bump detector image"
        body: |
          Automated update to kustomization for detector image.
          - Tag & digest updated by CI
          - This PR respects branch protection (no direct pushes to `main`)
        labels: |
          automations
          chore
        signoff: true
        committer: "herringbone-bot <actions@users.noreply.github.com>"
        author: "herringbone-bot <actions@users.noreply.github.com>"

    - name: Cleanup
      if: always()
      run: |
        docker rm -f test_detectionengine_detector || true

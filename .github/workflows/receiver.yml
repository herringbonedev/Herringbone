name: (Receiver) Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'logingestion/receiver/**'
      - '.github/workflows/receiver.yml'

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools (yq, skopeo, jq)
        run: |
          set -euo pipefail
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.43.1/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          sudo apt-get update
          sudo apt-get install -y skopeo jq

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Quay
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build, test, and push the Docker image
      - name: Build Docker image
        env:
          SHORT_SHA: ${{ github.sha }}
        run: |
          set -euo pipefail
          SHORT_SHA=${SHORT_SHA::8}
          docker build -t quay.io/herringbone/receiver:latest-${SHORT_SHA}-${GITHUB_RUN_NUMBER} ./logingestion/receiver

      - name: Run container for smoke test
        env:
          SHORT_SHA: ${{ github.sha }}
        run: |
          set -euo pipefail
          SHORT_SHA=${SHORT_SHA::8}
          docker run -d -p 7002:7002/udp --name test_receiver -e RECEIVER_TYPE=UDP quay.io/herringbone/receiver:latest-${SHORT_SHA}-${GITHUB_RUN_NUMBER}
          sleep 5
          docker logs test_receiver || true
          docker inspect test_receiver --format='{{.State.Running}}' | grep true

      - name: UDP Receiver Test
        run: |
          echo "Testing UDP receiver..."
          echo "Test message" | nc -u -w 0 localhost 7002
          sleep 5
          docker logs test_receiver | grep "Test message" || (echo "UDP receiver test failed" && exit 1)

      - name: Push image (only if tests pass)
        env:
          SHORT_SHA: ${{ github.sha }}
        run: |
          set -euo pipefail
          SHORT_SHA=${SHORT_SHA::8}
          docker push quay.io/herringbone/receiver:latest-${SHORT_SHA}-${GITHUB_RUN_NUMBER}

      # Update kustomization.yaml with the new image tag & digest
      - name: Get image digest
        id: digest
        env:
          SHORT_SHA: ${{ github.sha }}
        run: |
          set -euo pipefail
          SHORT_SHA=${SHORT_SHA::8}
          DIGEST=$(skopeo inspect docker://quay.io/herringbone/receiver:latest-${SHORT_SHA}-${GITHUB_RUN_NUMBER} | jq -r '.Digest')
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Update kustomization.yaml with new image tag & digest
        run: |
          set -euo pipefail
          SHORT_SHA=${GITHUB_SHA::8}
          TAG="latest-${SHORT_SHA}-${GITHUB_RUN_NUMBER}"
          yq eval -i ".images[0].newTag = \"$TAG\"" kustomize/receiver_udp/kustomization.yaml
          yq eval -i ".images[0].newTag = \"$TAG\"" kustomize/receiver_http/kustomization.yaml
          yq eval -i ".images[0].digest = \"${{ steps.digest.outputs.digest }}\"" kustomize/receiver_udp/kustomization.yaml
          yq eval -i ".images[0].digest = \"${{ steps.digest.outputs.digest }}\"" kustomize/receiver_http/kustomization.yaml

      - name: Detect changes
        id: bump
        run: |
          set -euo pipefail
          if git diff --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      # Create/Update PR using peter-evans (gracefully no-ops if no diff)
      - name: Create PR (only if changes exist)
        if: steps.bump.outputs.changed == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(receiver): bump image to ${{ steps.digest.outputs.digest }}"
          title: "chore(receiver): bump receiver image"
          body: |
            Automated update to kustomization for receiver image.
            - Tag & digest updated by CI
            - This PR respects branch protection.
          branch: auto/update/receiver
          delete-branch: true
          signoff: true
          labels: |
            automation

      - name: Log PR result
        if: steps.bump.outputs.changed == 'true'
        run: |
          echo "operation=${{ steps.cpr.outputs.pull-request-operation }}"
          echo "pr=${{ steps.cpr.outputs.pull-request-number || 'none' }}"

      - name: No changes
        if: steps.bump.outputs.changed != 'true'
        run: echo "No changes; skipping PR."

      # Cleanup
      - name: Cleanup
        if: always()
        run: |
          docker rm -f test_receiver || true
